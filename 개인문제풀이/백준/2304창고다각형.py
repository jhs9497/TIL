# 조망권 문제 ?
# 꼭대기 층에서 양쪽으로 봤을 때 양쪽 다 텅 비었거나 양쪽 다 막혀있으면 X
# 한 쪽만 막혀 있는 경우 막혀있는 곳 까지 달려가서 색칠하기


# 우선 1000 X 1000 배열 도화지를 만들자
coordi = [[0]*1000 for _ in range(1000)]
# 굳이 따지면 문제의 그림을 거꾸로 매달아 보는 셈인데 면적 구하는 것에서 값은 같다

N = int(input()) # 기둥의 갯수

H_list = []  # 기둥 꼭대기층 리스트
L_list = []  # 기둥 위치 리스트

for _ in range(N):
    L, H = map(int, input().split())
    H_list.append(H) # H는 리스트에 따로 모읍시다
    L_list.append(L) # 기둥 위치도
    # L을 왼쪽면에 위치라고 생각하지말고 코딩상에서 그 기둥의 인덱스라고 생각하자
    H -= 1
    # 그리고 H는 -1 해주자 why? 예를 들어 L=2, H=4 라면
    # 0,0 부터 시작하는 1000X1000 도화지에서는 0,2 1,2 2,2 3,2 4,2로 면적이 5라 측정되기 때문이다
    for i in range(H+1): # 레인지니깐 +1
        coordi[i][L] = 1  # 도화지에 색칠 / L은 고정시키고 H만 움직인다

    # 여기 까지 0의 도화지에 L,H에 맞춰서 1로 색칠했고 L,H를 리스트로 따로 빼뒀음

    # 높이 리스트가지고 탐색을 하자 양쪽으로 보면서 둘다 나보다 크거나 같은 놈을 마주치거나 / 아무도 못 마주치면 넘어가고
    # 한 쪽 에서만 나보다 크거나 같은놈을 마주치면 나와 그 마주친놈 직전까지를 나와 같은 수로 바꿔버린다.

